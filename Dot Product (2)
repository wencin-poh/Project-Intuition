<!DOCTYPE html>
<html>
<head>
  <!-- The following adds MathJax to render LaTeX notation -->
<script id="MathJax-script" async src="https://cdn.jsdelivr.net/npm/mathjax@3.0.1/es5/tex-mml-chtml.js"></script>

<script>
  MathJax = {
    tex: {
      inlineMath: [['$', '$'], ['\\(', '\\)']]
    },
  }
</script>
</head>
<style>
  #blank {
    position: relative;
  }

  #outer {
    position: absolute;
    height: 400px;
    width: 400px;
    left: 0px;
    top: 160px;
    background-color: white;
    text-align: center;
    border: 9px solid #d3d3d3;}

   
  #bluetip {
    position: absolute;
    height: 0px;
    width: 0px;
    left: 90px;
    top: 90px;
    background-color: grey;}
    
  #greentip {
    position: absolute;
    height: 20px;
    width: 20px;
    left: 290px;
    top: 90px;
    background-color: grey;}

  #redtip {
    position: absolute;
    height: 20px;
    width: 20px;
    left: 190px;
    top: 290px;
    background-color: grey;}
    
  #matrix {
    position: absolute;
    height: 130px;
    width: 300px;
    left: 10px;
    top: 10px;
    background-color: grey;
    text-align: center;
    border: 9px solid #d3d3d3;}


  #vector_u {
    position: absolute;
    left: 15px;
    top: 5px}

  #vector_v {
    position: absolute;
    left: 100px;
    top: 5px}
    
  #U1 {
    position: absolute;
    height: 20px;
    width: 70px;
    left: 10px;
    top: 30px;
    background-color: green;
    text-align: center;}
    
  #U2 {
    position: absolute;
    height: 20px;
    width: 70px;
    left: 10px;
    top: 50px;
    background-color: green;
    text-align: center;}

  #V1 {
    position: absolute;
    height: 20px;
    width: 70px;
    left: 95px;
    top: 30px;
    background-color: red;
    text-align: center;}

  #V2 {
    position: absolute;
    height: 20px;
    width: 70px;
    left: 95px;
    top: 50px;
    background-color: red;
    text-align: center;}

  #u_length {
    position: absolute;
    left: 5px;
    top: 75px}

  #v_length {
    position: absolute;
    left: 90px;
    top: 75px}

  #dot_product {
    position: absolute;
    left: 175px;
    top: 75px}
  
  #GL {
    position: absolute;
    height: 22px;
    width: 70px;
    left: 10px;
    top: 100px;
    background-color: green;
    text-align: center;}
    
  #RL {
    position: absolute;
    height: 22px;
    width: 70px;
    left: 95px;
    top: 100px;
    background-color: red;
    text-align: center;}

  #DP {
    position: absolute;
    height: 22px;
    width: 70px;
    left: 195px;
    top: 100px;
    background-color: yellow;
    text-align: center;}

  #but {
    position: absolute;
    height: 30px;
    width: 30px;
    left: 290px;
    top:30px;
    background-color: black;
    text-align: center;}

  #but2 {
    position: absolute;
    height: 30px;
    width: 30px;
    left: 235px;
    top:10px;
    background-color: black;
    text-align: center;}


  #sub {
    position: absolute;
    height: 30px;
    width: 200px;
    left: 350px;
    top: 50px;
    background-color: white;
    text-align: center;}

  #try {
    position: absolute;
    height: 30px;
    width: 90px;
    left: 350px;
    top: 10px;
    background-color: white;
    text-align: center;}

  #completed {
    position: absolute;
    left: 10px;
    top: 560px;}

  #score {
    position: absolute;
    left: 800px;
    top: 20px;}

  .greytext {
    color: grey;}

  .whitetext {
    color: white;}
  </style>

  <body>
  <h2><center>Module 2: Dot Product</center></h2>

  <p>The dot product of two vectors conveys several types of information.
  For example, two vectors are perpendicular to each other if and only if their dot product is $0$.
  Also, the dot product of any vector with itself is the square of its length.
  </p>

  <p>In general, the dot product of two vectors $\mathbf{u}$ and $\mathbf{v}$ is given by 
  \[\mathbf{u}\cdot \mathbf{v}=\|\mathbf{u}\|\|\mathbf{v}\|\cos\theta,\]
  where $\|\cdot\|$ denotes the length of a vector and $\theta$ is the angle between the two vectors.
  In the case of $\mathbf{u}$ and $\mathbf{v}$ being two-dimensional vectors, with $\mathbf{u}=\begin{bmatrix} x_1 \\ y_1 \end{bmatrix}$ and $\mathbf{v}=\begin{bmatrix} x_2 \\ y_2 \end{bmatrix}$, we have
  \[\mathbf{u}\cdot \mathbf{v}= x_1 x_2 + y_1 y_2.\] 
  </p>

  <p>For this module, you may change the vectors $\mathbf{u}$ and $\mathbf{v}$ in either one of two ways:
  <ul>
    <li> You may change the component entries for $\mathbf{u}$ and $\mathbf{v}$ either by scrolling or by typing, or</li>
    <li> You may drag the vectors, $\mathbf{u}$ in green and $\mathbf{v}$ in red, in the canvas below.</li>
  </ul>
  At the rightmost column, the lengths of each vector are shown, together with the dot product of the vectors. 
  Notice that the area and color of the rectangle change according to the size and the sign of the dot product.
  </p>

  <div>
    <div id="question">

    Click the "Start" button when you are ready to begin.

    </div>
  </div>

  <div id="blank">
    <div id="matrix">
      <div id="vector_u" class="whitetext">
        Vector $\mathbf{u}$
      </div>

      <div id="U1">
        <input type="number" id="u1"   style="width: 4em" value="1" step=0.01 onChange="match()">
      </div>

      <div id="U2">
        <input type="number" id="u2"   style="width: 4em" value="1" step=0.01 onChange="match()">
      </div>

      <div id="vector_v" class="whitetext">
        Vector $\mathbf{v}$
      </div>

      <div id="V1">
        <input type="number" id="v1"   style="width: 4em" value="0" step=0.01 onChange="match()">
      </div>

      <div id="V2">
        <input type="number" id="v2"   style="width: 4em" value="-1" step=0.01 onChange="match()">
      </div>

      <div id="u_length" class="whitetext">
        Length of $\mathbf{u}$
      </div>

      <div id="GL">
        <input type="number" id="gl"   style="width: 4em" value="1.41" step=0.01 onChange="match()">
      </div>

      <div id="v_length" class="whitetext">
        Length of $\mathbf{v}$
      </div>

      <div id="RL">
        <input type="number" id="rl"   style="width: 4em" value="1" step=0.01 onChange="match()">
      </div>

      <div id="dot_product" class="whitetext">
        Dot product, $\mathbf{u}\cdot\mathbf{v}$
      </div>

      <div id="DP">
        <input type="number" id="dot"   style="width: 4em" value="-1" step=0.01 onChange="match()">
      </div>
    </div>

    <div id="sub">
      <button  onclick="submit()">Start</button>
      <button onclick="previousPage()">Previous</button>
      <button onclick="nextPage()">Next</button>
    </div>

    <div id="try">
    </div>

    <div id="outer">
      <div id="bluetip">
      </div>

      <div id="greentip">
      </div>

      <div id="redtip">
      </div>

      <canvas id="myCanvas" width="400" height="400"
      style="border:1px solid #c3c3c3;">
      </canvas>
    </div>

    <div id="score">
    </div>
  
    <div id="completed">
      <h2>Completed Questions:</h2>
    </div>
  </div>

  

  <script>
  function draw(){
    gt=document.getElementById("greentip")
    rt=document.getElementById("redtip")

    g1=gt.offsetLeft+10
    g2=gt.offsetTop+10
    r1=rt.offsetLeft+10
    r2=rt.offsetTop+10

    G1=g1-200
    G2=200-g2
    R1=r1-200
    R2=200-r2

    H1=G1*(G1*R1+G2*R2)/(G1*G1+G2*G2)
    H2=G2*(G1*R1+G2*R2)/(G1*G1+G2*G2)

    if (G1>=0){
      S1=-H2
      S2=H1}
    if (G1<0){
      S1=H2
      S2=-H1}

    C1=G1+S1
    C2=S2+G2

    h1=200+H1
    h2=200-H2
    s1=200+S1
    s2=200-S2
    c1=200+C1
    c2=200-C2
    var canvas = document.getElementById("myCanvas");
    var ctx = canvas.getContext("2d");
    ctx.clearRect(0, 0, canvas.width, canvas.height)
    ctx.beginPath();
    ctx.strokeStyle="black"
    ctx.lineWidth=1
    ctx.moveTo(0, 200);
    ctx.lineTo(400, 200);
    ctx.stroke();
    ctx.beginPath();
    ctx.strokeStyle="black"
    ctx.lineWidth=1
    ctx.moveTo(200, 0);
    ctx.lineTo(200, 400);
    ctx.stroke();

    ctx.beginPath();
    if (G1*R1+G2*R2>=0){
    ctx.fillStyle = "yellow"
    ctx.strokeStyle="yellow"}
    if (G1*R1+G2*R2<0){
    ctx.fillStyle = "orange"
    ctx.strokeStyle="orange"}
    ctx.lineWidth=2
    ctx.moveTo(200, 200);
    ctx.lineTo(g1, g2);
    ctx.lineTo(c1, c2);

    ctx.lineTo(s1, s2);

    ctx.lineTo(200, 200);
    ctx.stroke();
    ctx.fill();

    ctx.beginPath();
    ctx.strokeStyle="green"
    ctx.lineWidth=3
    ctx.moveTo(200, 200);
    ctx.lineTo(g1, g2);
    ctx.stroke();
    ctx.beginPath();
    ctx.strokeStyle="red"
    ctx.lineWidth=3
    ctx.moveTo(200, 200);
    ctx.lineTo(r1, r2);
    ctx.stroke();

    ctx.beginPath();
    ctx.strokeStyle="red"
    ctx.setLineDash([2, 3])
    ctx.lineWidth=3
    ctx.moveTo(200, 200);
    ctx.lineTo(h1, h2);
    ctx.stroke();

    ctx.beginPath();
    ctx.strokeStyle="red"
    ctx.lineWidth=3
    ctx.moveTo(200, 200);
    ctx.lineTo(s1, s2);
    ctx.stroke();

    ctx.beginPath();
    ctx.strokeStyle="black"
    ctx.lineWidth=2
    ctx.moveTo(h1, h2);
    ctx.lineTo(r1, r2);
    ctx.stroke();

    ctx.setLineDash([5, 0])
  }
  </script>

  <script>
  function fill(){
    gt=document.getElementById("greentip")
    rt=document.getElementById("redtip")

    g1=gt.offsetLeft+10
    g2=gt.offsetTop+10
    r1=rt.offsetLeft+10
    r2=rt.offsetTop+10

    G1=g1-200
    G2=200-g2
    R1=r1-200
    R2=200-r2

    D=(G1*R1+G2*R2)/10000
    D=D.toFixed(2)
    G=Math.pow(G1*G1+G2*G2,0.5)/100
    R=Math.pow(R1*R1+R2*R2,0.5)/100
    G=G.toFixed(2)
    R=R.toFixed(2)
    document.getElementById("dot").value=D
    document.getElementById("gl").value=G
    document.getElementById("rl").value=R
    document.getElementById("u1").value=G1/100
    document.getElementById("u2").value=G2/100
    document.getElementById("v1").value=R1/100
    document.getElementById("v2").value=R2/100
  }
  </script>

  <script>
  draw()
  </script>

  <script>
  function mobilize(tip) {
    tip.onmousedown = move;  

    function move(e) {
      x0 = e.clientX;
      y0 = e.clientY;
      document.onmousemove = drag;
      document.onmouseup = close;
    }

    function drag(e) {
      dx = e.clientX-x0;
      dy = e.clientY-y0;
      x0 = e.clientX;
      y0 = e.clientY;
      tip.style.left = (tip.offsetLeft + dx) + "px";
      tip.style.top = (tip.offsetTop + dy) + "px";
      draw(tip.offsetLeft + dx + 10, tip.offsetTop + dy +10);
      fill()
    }

    function close() {
    	document.onmouseup = null;
    	document.onmousemove = null;
    }
  }

  gt=document.getElementById("greentip")
  mobilize(gt)
  rt=document.getElementById("redtip")
  mobilize(rt)
  </script>

  <script>
  function match(){
    a12=document.getElementById("u1").value
    a22=document.getElementById("u2").value

    v1=document.getElementById("v1").value
    v2=document.getElementById("v2").value

    gt=document.getElementById("greentip")
    rt=document.getElementById("redtip")

    A12=100*a12+200-10
    A22=200-100*a22-10
    V1=100*v1+200-10
    V2=200-100*v2-10

    gt.style.left=A12+"px"
    gt.style.top=A22+"px"

    rt.style.left=V1+"px"
    rt.style.top=V2+"px"

    G=Math.pow(a12*a12+a22*a22,0.5)
    R=Math.pow(v1*v1+v2*v2,0.5)
    D=(a12*v1+a22*v2)
    D=D.toFixed(2)
    G=G.toFixed(2)
    R=R.toFixed(2)
    document.getElementById("dot").value=D
    document.getElementById("gl").value=G
    document.getElementById("rl").value=R

    draw()
  }
  </script>

  <script>
  var initialized=0
  var page=0
  var questions=[
  "1. Find two vectors with length roughly equal to $1$ and dot product roughly equal to $1$.",
  "2. Good job, now find two vectors with length roughly equal to $1$ and dot product roughly equal to $0.5$.",
  "3. Excellent,  now find two vectors with length roughly equal to $1$ and dot product roughly equal to $0$.",
  "4. Good job,  now find two vectors with length roughly equal to $1$ and dot product roughly equal to $-0.5$.",
  "5. Excellent, now find two vectors with length roughly equal to $1$ and dot product roughly equal to $-1$.",
  "6. Good, find two vectors $\\mathbf{u}$ and $\\mathbf{v}$ such that they are roughly parallel and that their dot product roughly equal to $1.2$.",
  "7. Great, find two vectors $\\mathbf{u}$ and $\\mathbf{v}$ such that they are roughly parallel and that their dot product roughly equal to $-0.3.$",
  "8. Great, set vector $\\mathbf{u}$ to be in the second quadrant. Find a vector $\\mathbf{v}$ such that it makes an angle of roughly $60^{\\circ}$ and that the dot product is roughly $0.8$.",
  "9. Nice, set vector $\\mathbf{v}$ to be in the fourth quadrant. Find a vector $\\mathbf{u}$ such that it makes an angle of roughly $120^{\\circ}$ and that the dot product is roughly $-0.6$.",
  "10. Set vector $\\mathbf{u}$ to have length roughly equal to 1.5. Which unit vector $\\mathbf{v}$ maximizes the value of the dot product between them?",
  "11. Set vector $\\mathbf{v}$ to have length roughly equal to 0.5. Which unit vector $\\mathbf{u}$ minimizes the value of the dot product between them?",
  "Good job!!!"]

  answered = [0,0,0,0,0,0,0,0,0,0,0]
  function score(){
    scoreBoard = document.getElementById("score")
    while(scoreBoard.firstChild){
      scoreBoard.removeChild(scoreBoard.firstChild)}

    var scoreCard = document.createElement('h1')
    scoreCard.style.fontSize="x-large"
    scoreCard.style.textAlign="left"
    scoreCard.innerHTML="Score Card"
    scoreBoard.appendChild(scoreCard)

    for (i=0; i<answered.length; i++){
      question_id = 'q' + i
      var question = document.createElement('div');
      question.style.fontSize = "x-large"
      question.style.textAlign = "left"
      question.id = question_id;
      question.innerHTML =  i + 1;
      if (answered[i]==0){
        question.style.color = 'red'
        Check = question.innerHTML
        Check += " &#x2610"
        question.innerHTML = Check
      }
      if (answered[i]==1){
        question.style.color = 'green'
        Check = question.innerHTML
        Check += " &#9745"
        question.innerHTML = Check
      }
      scoreBoard.appendChild(question)
    }
  }
  score()
  
  function grade(p,g1,g2,r1,r2,d,G,R){
    correct=0
    
    if (p==0){ if (Math.abs(G-1)<=0.1 && Math.abs(R-1)<=0.1 && Math.abs(d-1)<=0.1){correct=1}}
    if (p==1){ if (Math.abs(G-1)<=0.1 && Math.abs(R-1)<=0.1 && Math.abs(d-0.5)<=0.1){correct=1}}
    if (p==2){ if (Math.abs(G-1)<=0.1 && Math.abs(R-1)<=0.1 && Math.abs(d-0)<=0.1){correct=1}}
    if (p==3){ if (Math.abs(G-1)<=0.1 && Math.abs(R-1)<=0.1 && Math.abs(d-(-0.5))<=0.1){correct=1}}
    if (p==4){ if (Math.abs(G-1)<=0.1 && Math.abs(R-1)<=0.1 && Math.abs(d-(-1))<=0.1){correct=1}}
    if (p==5){ if (Math.abs(g1*r2-g2*r1)<=0.1 && Math.abs(d-1.2)<=0.1){correct=1}}
    if (p==6){ if (Math.abs(g1*r2-g2*r1)<=0.1 && Math.abs(d-(-0.3))<=0.1){correct=1}}
    if (p==7){ if (g1<=0 && g2>=0 && Math.abs(d-0.8)<=0.1 && Math.abs(d/(G*R)-0.5)<=0.1){correct=1}}
    if (p==8){ if (r1>=0 && r2<=0 && Math.abs(d-(-0.6))<=0.1 && Math.abs(d/(G*R)-(-0.5))<=0.1){correct=1}}
    if (p==9){ if (Math.abs(d-G*R)<=0.1 && Math.abs(G-1.5)<=0.1 && Math.abs(R-1)<=0.1){correct=1}}
    if (p==10){ if (Math.abs(d-(-G*R))<=0.1 && Math.abs(R-0.5)<=0.1 && Math.abs(G-1)<=0.1){correct=1}}
    return(correct)
  }
  
  function submit(){
    if (initialized==0){
      document.getElementById("sub").getElementsByTagName("button")[0].innerText="Submit"
      displayQuestion(page)
    }
  
    if (initialized==1){
      gx=(document.getElementById("u1").value)
      gy=(document.getElementById("u2").value)
      rx=(document.getElementById("v1").value)
      ry=(document.getElementById("v2").value)
      dot=(document.getElementById("dot").value)
      gL=(document.getElementById("gl").value)
      rL=(document.getElementById("rl").value)
      
      var feed=document.getElementById("try").innerText
      if (feed==""){
       document.getElementById("try").innerText="Try Again"}
      if (feed=="Not Quite"){
       document.getElementById("try").innerText="Try Again"}
      if (feed=="Try Again"){
       document.getElementById("try").innerText="Not Quite"}
  
      if (grade(page,gx,gy,rx,ry,dot,gL,rL)==1){
        document.getElementById("try").innerText=""
        appendCompletedQuestion(page)
        score()
        page+=1
        displayQuestion(page)
      }
    }
    initialized=1
  }

  function displayQuestion(page){
    document.getElementById("question").innerText = questions[page]
    MathJax.typesetPromise()
  }

  function nextPage(){
    if (initialized && page<12-1){
      page += 1
      displayQuestion(page)}
  }

  function previousPage(){
    if (initialized && page>0){
      page -= 1
      displayQuestion(page)}
  }

  function appendCompletedQuestion(page){
    if (answered[page] == 0){
      answered[page] = 1
      var answeredQuestion = document.createElement('div')
      answeredQuestion.textContent = questions[page]
      answeredQuestion.setAttribute('class', 'greytext')
      document.getElementById("completed").appendChild(answeredQuestion)
    }
  }
  </script>
  </body>
</html>
<!DOCTYPE html>
<html>
<style>
#blank {
  position: relative;
}

#outer {
  position: absolute;
  height: 400px;
  width: 400px;
  left: 0px;
  top: 90px;
  background-color: white;
  text-align: center;
  border: 9px solid #d3d3d3;}

 #bluetip {
  position: absolute;
  height: 20px;
  width: 20px;
  left: 90px;
  top: 90px;
  background-color: grey;}
  
   #greentip {
  position: absolute;
  height: 20px;
  width: 20px;
  left: 290px;
  top: 90px;
  background-color: grey;}
  
 #matrix {
  position: absolute;
  height: 60px;
  width: 350px;
  left: 10px;
  top: 10px;
  background-color: grey;
  text-align: center;
  border: 9px solid #d3d3d3;}
  
  #M11 {
  position: absolute;
  height: 20px;
  width: 60px;
  left: 10px;
  top: 10px;
  background-color: blue;
  text-align: center;}
  
    #M21 {
  position: absolute;
  height: 20px;
  width: 60px;
  left: 10px;
  top: 30px;
  background-color: blue;
  text-align: center;}
  
  #M12 {
  position: absolute;
  height: 20px;
  width: 60px;
  left: 70px;
  top: 10px;
  background-color: red;
  text-align: center;}

    #M22 {
  position: absolute;
  height: 20px;
  width: 60px;
  left: 70px;
  top: 30px;
  background-color: red;
  text-align: center;}
  
     #times {
  position: absolute;
  height: 20px;
  width: 20px;
  left: 140px;
  top: 20px;
  background-color: white;
  text-align: center;}

       #equals {
  position: absolute;
  height: 20px;
  width: 20px;
  left: 245px;
  top: 20px;
  background-color: white;
  text-align: center;}
  
  
  #V1 {
  position: absolute;
  height: 20px;
  width: 60px;
  left: 170px;
  top: 10px;
  background-color: blue;
  text-align: center;}
  
    #V2 {
  position: absolute;
  height: 20px;
  width: 60px;
  left: 170px;
  top: 30px;
  background-color: red;
  text-align: center;}
  
  #W1 {
  position: absolute;
  height: 20px;
  width: 65px;
  left: 280px;
  top: 10px;
  background-color: purple;
  text-align: center;}
  
  
  
    #W2 {
  position: absolute;
  height: 20px;
  width: 65px;
  left: 280px;
  top: 30px;
  background-color: purple;
  text-align: center;}
 
    #but {
  position: absolute;
  height: 30px;
  width: 30px;
  left: 290px;
  top:30px;
  background-color: black;
  text-align: center;}
  
  #but2 {
  position: absolute;
  height: 30px;
  width: 30px;
  left: 235px;
  top:10px;
  background-color: black;
  text-align: center;}

 #sub {
  position: absolute;
  height: 30px;
  width: 80px;
  left: 380px;
  top: 50px;
  background-color: white;
  text-align: center;}

     #try {
  position: absolute;
  height: 30px;
  width: 80px;
  left: 380px;
  top: 10px;
  background-color: white;
  text-align: center;}
  
 </style>

 
<body>
<div>
<p>
This module explores matrix-vector multiplication.  In particular, it emphasizes how a matrix vector product can be viewed as a linear combination of the columns of the matrix.
</p>
<p>
To complete this module, you'll need to choose matrices and vectors so that their product has some desired characteristics.  The matrix is shown on the left of the multiplication sign, and the vectors represented by its columns are shown on the graph.  They are color coordinated with the columns. 
</p>
<p>
You can adjust the matrix in 3 different ways:  by dragging the gray boxes at the ends of the vectors; by typing in numerical values in the matrix; and by using the up and down arrow buttons next to the numbers.  Give it a try!
</p>
<p>
You'll also need to adjust the vector on the right side of the multiplication sign.  You can do this by typing in numerical values or using the arrow buttons.  Notice that each vector entry is color coordinated with the matrix column that it multiplies.
</p>
<p>
The product of your matrix and vector is on the right side of the equation, and also shown on the graph.  Both are in purple.  You'll want to carefully observe how this product is a combination of the blue and red vectors encoded in the matrix.
</p>
<div id="question">
Ready to begin?  Click "Start" to view your first question.
</div>

</div>
<div id="blank">
<div id="matrix">

<div id="M11">
<input type="number" id="m11"   style="width: 3em" value="-1" step=0.1 onChange="match()">
</div>


<div id="M12">
<input type="number" id="m12"   style="width: 3em" value="1" step=0.1 onChange="match()">
</div>


<div id="M21">
<input type="number" id="m21"   style="width: 3em" value="1" step=0.1 onChange="match()">
</div>


<div id="M22">
<input type="number" id="m22"   style="width: 3em" value="1" step=0.1 onChange="match()">
</div>

<div id="times">
<b>
&times
</b>
</div>

<div id="V1">
<input type="number" id="v1"   style="width: 3em" value="0.5" step=0.1 onChange="match()">
</div>

<div id="V2">
<input type="number" id="v2"   style="width: 3em" value="0.5" step=0.1 onChange="match()">
</div>

<div id="equals">
<b>
=
</b>
</div>

<div id="W1">
<input type="number" id="w1"   style="width: 3.5em" value="0" step=0.01 onChange="match()">
</div>

<div id="W2">
<input type="number" id="w2"   style="width: 3.5em" value="1" step=0.01 onChange="match()">
</div>

</div>




<div id="sub">
<button  onclick="submit()">Start</button>
</div>
<div id="try">

</div>




<div id="outer">

<div id="bluetip">
</div>

<div id="greentip">
</div>



<canvas id="myCanvas" width="400" height="400"
style="border:1px solid #c3c3c3;">
</canvas>
</div>


</div>




<script>
function draw(){



 gt=document.getElementById("greentip")
 bt=document.getElementById("bluetip")

 
b1=bt.offsetLeft+10
b2=bt.offsetTop+10
g1=gt.offsetLeft+10
g2=gt.offsetTop+10


B1=(b1-200)/100
B2=(200-b2)/100
G1=(g1-200)/100
G2=(200-g2)/100
R1=document.getElementById("v1").value
R2=document.getElementById("v2").value

BR1=B1*R1
BR2=B2*R1
GR1=G1*R2
GR2=G2*R2
CR1=BR1+GR1
CR2=BR2+GR2

br1=100*(BR1+2)
br2=100*(2-BR2)
gr1=100*(GR1+2)
gr2=100*(2-GR2)
cr1=100*(CR1+2)
cr2=100*(2-CR2)



var canvas = document.getElementById("myCanvas");
var ctx = canvas.getContext("2d");
ctx.clearRect(0, 0, canvas.width, canvas.height)
ctx.beginPath();
ctx.strokeStyle="black"
ctx.lineWidth=1
ctx.moveTo(0, 200);
ctx.lineTo(400, 200);
ctx.stroke();
ctx.beginPath();
ctx.strokeStyle="black"
ctx.lineWidth=1
ctx.moveTo(200, 0);
ctx.lineTo(200, 400);
ctx.stroke();



ctx.beginPath();
ctx.strokeStyle="red"
ctx.lineWidth=2
ctx.moveTo(200, 200);
ctx.lineTo(g1, g2);
ctx.stroke();


ctx.beginPath();
ctx.strokeStyle="blue"
ctx.lineWidth=2
ctx.moveTo(200, 200);
ctx.lineTo(b1, b2);
ctx.stroke();



ctx.beginPath();
ctx.strokeStyle="red"
ctx.lineWidth=4
ctx.setLineDash([2, 3])
ctx.moveTo(200, 200);
ctx.lineTo(gr1, gr2);
ctx.stroke();
ctx.setLineDash([3, 0])


ctx.beginPath();
ctx.strokeStyle="blue"
ctx.lineWidth=4
ctx.setLineDash([2, 3])
ctx.moveTo(200, 200);
ctx.lineTo(br1, br2);
ctx.stroke();
ctx.setLineDash([3, 0])

ctx.beginPath();
ctx.strokeStyle="blue"
ctx.lineWidth=4
ctx.setLineDash([2, 3])
ctx.moveTo(gr1, gr2);
ctx.lineTo(cr1, cr2);
ctx.stroke();
ctx.setLineDash([3, 0])


ctx.beginPath();
ctx.strokeStyle="red"
ctx.lineWidth=4
ctx.setLineDash([2, 3])
ctx.moveTo(br1, br2);
ctx.lineTo(cr1, cr2);
ctx.stroke();
ctx.setLineDash([3, 0])



ctx.beginPath();
ctx.strokeStyle="purple"
ctx.lineWidth=2
ctx.moveTo(200, 200);
ctx.lineTo(cr1, cr2);
ctx.stroke();
ctx.beginPath();
ctx.arc(cr1, cr2, 4, 0, 7);
ctx.stroke();
ctx.fill();
}



</script>





<script>




function fill(){


 gt=document.getElementById("greentip")
 bt=document.getElementById("bluetip")
b1=bt.offsetLeft+10
b2=bt.offsetTop+10
g1=gt.offsetLeft+10
g2=gt.offsetTop+10


B1=b1-200
B2=200-b2
G1=g1-200
G2=200-g2


document.getElementById("m11").value=Math.round(B1/10)/10
document.getElementById("m21").value=Math.round(B2/10)/10
document.getElementById("m12").value=Math.round(G1/10)/10
document.getElementById("m22").value=Math.round(G2/10)/10





}




</script>





<script>
draw()

</script>



































<script>



function mobilize(tip) {
    tip.onmousedown = move;  

  function move(e) {
    x0 = e.clientX;
    y0 = e.clientY;
    document.onmousemove = drag;
    document.onmouseup = close;
  }

function drag(e) {
    dx = e.clientX-x0;
    dy = e.clientY-y0;
    x0 = e.clientX;
    y0 = e.clientY;
    tip.style.left = (tip.offsetLeft + dx) + "px";
    tip.style.top = (tip.offsetTop + dy) + "px";
    draw(tip.offsetLeft + dx + 10, tip.offsetTop + dy +10);
    fill()
  }

function close() {
  document.onmouseup = null;
  document.onmousemove = null;
    tip.style.left = 10*Math.round(tip.offsetLeft/10) + "px";
    tip.style.top = 10*Math.round(tip.offsetTop/10) + "px";
    draw(tip.offsetLeft + dx + 10, tip.offsetTop + dy +10);
        fill()
        purp()
 }
  
  
}




bt=document.getElementById("bluetip")
mobilize(bt)
gt=document.getElementById("greentip")
mobilize(gt)



</script>
















<script>
function match(){

a11=document.getElementById("m11").value
a21=document.getElementById("m21").value


a12=document.getElementById("m12").value
a22=document.getElementById("m22").value


 gt=document.getElementById("greentip")
 bt=document.getElementById("bluetip")


A11=100*a11+200-10
A21=200-100*a21-10
A12=100*a12+200-10
A22=200-100*a22-10


bt.style.left=A11+"px"
bt.style.top=A21+"px"

gt.style.left=A12+"px"
gt.style.top=A22+"px"





draw()
purp()

}


</script>






<script>
function purp(){




a11=document.getElementById("m11").value
a12=document.getElementById("m12").value
a21=document.getElementById("m21").value
a22=document.getElementById("m22").value



x=document.getElementById("v1").value
y=document.getElementById("v2").value

X=Math.round(100*(a11*x+a12*y))/100
Y=Math.round(100*(a21*x+a22*y))/100


document.getElementById("w1").value=X
document.getElementById("w2").value=Y




}


</script>



<script>
var initialized=0
var page=0
var quests=[
"1. Make a linear combination that includes 2 copies of the first column of the matrix, and 3 copies of the second.",
"2. Make a linear combination that adds 4 of the first column and subtracts 2 of the second.",
"3. Find a linear combination where the result does not depend at all on the second column of the matrix.  You can check your answer by changing the red vector and making sure the result does not change.",
"4. Find a linear combination where the result does not depend at all on the second column of the matrix, and the result is the vector (-1, 0).",
"5. Find a two vectors in the second quadrant, and a linear combination of them which lies in the first quadrant.",
"6. Good job, now find a vector in the first quadrant and a vector in the third quadrant along with a linear combination of them in the fourth quadrant.",
"7. Let's think about making the three vector end-points colinear (i.e. the gray squares and black dot all lying on one line).  First, make the vector in the matrix-vector product equal to (1,1).  Then, find a matrix where the columns are approximately colinear with the product.",
"8. Next, find a vector so that any matrix will result in all our vectors being colinear.  Hint: you'll need the product (the black dot) to always land right in between the gray squares.",
"9. Find a vector so that the matrix-vector product is always the same, no matter what matrix you use.",
"10. Find a matrix so that we can multiply it with any vector and get the same vector as the product (i.e. vectors are unchanged by multiplication with this matrix)",

"Good job!!!"]


function submit(){
if (initialized==0){
document.getElementById("sub").getElementsByTagName("button")[0].innerText="Submit"
document.getElementById("question").innerText=quests[page]
}

if (initialized==1){
M11=document.getElementById("m11").value
M21=document.getElementById("m21").value
M12=document.getElementById("m12").value
M22=document.getElementById("m22").value
V1=document.getElementById("v1").value
V2=document.getElementById("v2").value
W1=document.getElementById("w1").value
W2=document.getElementById("w2").value
var feed=document.getElementById("try").innerText
if (feed==""){
document.getElementById("try").innerText="Try Again"}
if (feed=="Not Quite"){
document.getElementById("try").innerText="Try Again"}
if (feed=="Try Again"){
document.getElementById("try").innerText="Not Quite"}




if (grade(page,M11,M21,M12,M22,V1,V2,W1,W2)==1)
{
document.getElementById("try").innerText=""
page+=1
document.getElementById("question").innerText=quests[page]
}




}
initialized=1
}






function grade(p,m11,m21,m12,m22,v1,v2,w1,w2){
correct=0

if (p==0){
  if(v1==2 && v2==3){
    correct = 1}}

if (p==1){
  if(v1==4 && v2== -2){
    correct = 1}}

if (p==2){
  if(v2==0){
    correct = 1}}

if (p==3){
  if(v2==0 && w1==-1 && w2==0){
    correct = 1}}

if (p==4){
  if (m11<=0 && m21>=0 && m12<=0 && m22>=0 && w1>=0 && w2>=0){
    correct=1}}

if (p==5){
  if (m11>=0 && m21>=0 && m12<=0 && m22<=0 && w1>=0 && w2<=0){
    correct=1}
  if (m12>=0 && m22>=0 && m11<=0 && m21<=0 && w1>=0 && w2<=0){
    correct=1}}

if (p==6){
  if (v1==1 && v2==1 && -0.1 < ((m11/m12)/(m21/m22)-1) && ((m11/m12)/(m21/m22)-1) < 0.1){
    correct = 1}}

if (p==7){
  if (v1==0.5 && v2==0.5){
    correct=1}}

if (p==8){
  if (v1==0 && v2==0){
    correct=1}}

if (p==9){
  if (m11==1 && m12==0 && m21==0 && m22==1){
    correct=1}}
  

return(correct)
}


</script>




</body>
</html>
